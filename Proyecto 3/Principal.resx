<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKCYAAAEAIAAYGQAAFgAAACgAAAAoAAAATAAAAAEAIAAAAAAAwBcAACMuAAAjLgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAc4dRnmx+S2dqfEq7anxKoGp8SpZqfEqjanxKo2p8SpVqfEqsanxKrmp8
        SplqfEqIanxKt2p8SsNqfEpVanxKsWp8SsVqfEqnanxKo2p8SpNqfEqkanxKlGp8SqxqfEqmanxKqGp8
        SohqfEqsanxKump8SrxqfEqSbH5LiHOHUZkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeY5VFHCD
        ToxrfUvDanxKzWp8SnxqfEp7anxKaGp8SsJqfEqBanxKoWp8SnJqfEpvanxK1Wp8Sl5qfEq6anxKw2p8
        Sp1qfEq4anxKX2p8SoJqfEq7anxKdWp8SpBqfEqhanxKSWp8Sl5qfErWanxKSmp8St1qfErManxKRGt9
        S9Zwg05IeY5VFAAAAAAAAAAAAAAAAAAAAAAAAAAAfZJXDXSIUSVxhE9SbYBMMWt9Sn1qfEpqanxKdmp8
        SkxqfEp0anxKRWp8SllqfEpganxKJ2p8SnFqfEpNanxKgWp8Sj9qfEptanxKfGp8SnxqfEppanxKc2p8
        SldqfEpdanxKXGp8Sm9qfEpManxKeWp8SkpqfEppanxKbWt9SkRtgExscYRPJnSIUSV9klcNAAAAAAAA
        AAAAAAAAAAAAAHmOVUt5jVQAAAAAAHKFUCRsfkvIanxKzWp8SmNqfEquanxKzWp8SnFqfEq7anxKOGp8
        StxqfEodanxK3mp8SqJqfEqXanxKtWp8SsVqfEqeanxKmmp8SrFqfEraanxKiWp8SsFqfEq/anxKlGp8
        SqJqfErLanxKnWp8Sr9sfkvAcoVQJwAAAAB5jVQAeY5VSwAAAAAAAAAAAAAAAH2TVxd6jlVMAAAAAAAA
        AAB3i1M+boFNfmx/TJ9sf0xQbH9M4mx/TNFsf0xNbH9Mlmx/TIxsfkuaa31KNGp8St5qfEpNanxKPWp8
        SslqfErLanxKbmp8SspqfEpxa31KuGx+S0Bsf0yFbH9Mbmx/TGxsf0zObH9MyWx/TEBsf0yBboFNc3eL
        U1oAAAAAAAAAAHqOVUx9k1cXAAAAAAAAAAB5jlRxfZJXCAAAAAAAAAAAfZJXWXaKUox0iFGkdIhRkHSI
        UZR0iFGadIhRj3SIUZ90h1G0cYRPeGx/S5Roe0i3Z3pHomd6R4JnekewZ3pHp2d6R1pnekeeaHtIeWx/
        S7VxhE+GdIdRrHSIUZ10iFEddIhRt3SIUaR0iFFbdIhRrHaKUpx9klcOAAAAAAAAAAB9klcIeY5UcQAA
        AAB1iFEBd4tTjQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABqfUcyX3M8UVtvOFFabjdRWm43UVpuN1FabjdRW284UV9zPFFqfUcyAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHeLU411iFEBboBNNXWJUm0AAAAAfZJXdneM
        U6R1iVKkdIhRpHSIUaRxhU6klqV53pmofuZwhUzmdIdQ5nSHUeZugkvmeIla9f/////9/Pz/+vv6//r6
        +f/6+vn/+vv6//38/P//////eIla9W6CS+Z0h1HmdIdQ5nCFTOaZqn7llqZ52XGFTqZ0iFGmdIhRpXWJ
        UqR3jFOkfZJXdgAAAAB1iVJtboBNNWx/THl0iFE8AAAAAHaKUpNugU3/bH9M/2x/TP9sfkv/aHtG/5yp
        hf/Iz7v/ZXhD/2t9Sv9sfkv/aHtH/2l8Sf///////////////////////////////////////////2l8
        Sf9oe0f/bH5L/2t9Sv9leEP/yM+7/5yphf9oe0b/bH5L/2x/TP9sf0z/boFN/3aKUpMAAAAAdIhRPGx/
        THlsf0yudIhRGQAAAAB1iVJmbX9M/2p8Sv9qfEr/anxJ/2Z5Rf+Aj2X/2N3R/2J1QP9nekf/anxK/2h6
        R/9gcz//2d/R/7K7of+tt5r/+vr5//r6+f+tt5r/sruh/9nf0f9gcz//aHpH/2p8Sv9nekf/YnVA/9jd
        0f+Aj2X/ZnlF/2p8Sf9qfEr/anxK/21/TP91iVJmAAAAAHSIURlsf0yubH9M1XWJUgQAAAAAeY5VK2+C
        TsxrfUr/anxK/2p8Sv9oekf/YXQ//9HXx/+Aj2T/ZnhF/2l8Sf9oe0j/Y3ZB/5+ri/9abjf/U2gu/+3u
        6P/t7uj/U2gu/1puN/+fq4v/Y3ZB/2h7SP9pfEn/ZnhF/4CPZP/R18f/YXQ//2h6R/9qfEr/anxK/2t9
        Sv9vgk7MeY5VKwAAAAB1iVIEbH9M1Wx/TOt2ilIAAAAAAAAAAAB0h1FLbH5L/2p8Sv9qfEr/aXtI/2N2
        Qv+9xa//kqB8/2R3Q/9pe0n/aXtJ/2V4RP+lr5H/YXVA/1puNv/u8Or/7vDq/1puNv9hdUD/pa+R/2V4
        RP9pe0n/aXtJ/2R3Q/+SoHz/vcWv/2N2Qv9pe0j/anxK/2p8Sv9sfkv/dIdRSwAAAAAAAAAAdopSAGx/
        TOtsf0z8d4tTAgAAAAAAAAAAd4tTIG1/TP9qfEr/anxK/2l7Sf9meEX/dodZ/9LXyP9idUD/aHpI/2l7
        Sf9leET/pbCS/2N2Qf9bbzj/6+7o/+vu6P9bbzj/Y3ZB/6Wwkv9leET/aXtJ/2h6SP9idUD/0tfI/3aH
        Wf9meEX/aXtJ/2p8Sv9qfEr/bX9M/3eLUyAAAAAAAAAAAHeLUwJsf0z8bH9M/3eLUxUAAAAAAAAAAHyR
        VwBwg04ta31L/2p8Sv9qfEr/aHpH/2F0P//m6eL/YHM+/2d5Rv9pe0j/ZXhE/6Wwkv9jdkH/XG85/+fr
        4//n6+P/XG85/2N2Qf+lsJL/ZXhE/2l7SP9neUb/YHM+/+bp4v9hdD//aHpH/2p8Sv9qfEr/a31L/3CD
        Tix8kVcAAAAAAAAAAAB3i1MVbH9M/2x/TPZ3i1M3AAAAAAAAAAAAAAAAeY5VB3CDTvtrfUv/anxK/2l7
        SP9kdkL/s7ui/4+cd/9leET/aHpI/2V4RP+lsJL/Y3ZB/1xwOf/l6OD/5ejg/1xwOf9jdkH/pbCS/2V4
        RP9oekj/ZXdE/4+deP+xu6H/ZHZC/2l7SP9qfEr/a31L/3CDTvt5jlUGAAAAAAAAAAAAAAAAd4tTN2x/
        TPZsf0zgdopSZgAAAAAAAAAAAAAAAAAAAAB5jVRCb4JN/Wt9Sv9qfEn/ZnlG/2Z3Rf/X3M7/YnVB/2d5
        Rv9leET/pbCS/2N2Qv9ccDr/4uXb/+Ll2/9ccDr/Y3ZC/6Wwkv9leET/Z3lG/2J1Qf/Y3M7/ZHdD/2Z5
        Rv9qfEn/a31K/2+CTf15jVRBAAAAAAAAAAAAAAAAAAAAAHaKUmZsf0zgbH5LvnSHUaQAAAAAAAAAAAAA
        AAAAAAAAAAAAAHSIUeFsf0z/anxK/2h6SP9idUH/z9TE/2x+Tf9meEX/ZXhE/6Wwkv9jdkL/XXA6/97j
        2P/e49j/XXA6/2N2Qv+lsJL/ZXhE/2Z4Rf9sfk3/zdTE/2J1Qf9oekj/anxK/2x/TP90iFHfAAAAAAAA
        AAAAAAAAAAAAAAAAAAB0h1GkbH5Lvmt9So9vgk7sfJFWBQAAAAAAAAAAAAAAAAAAAAB7kFZbb4JO6mt9
        Sv9pe0n/ZHdD/5umhf+YpIL/ZHdD/2V3Q/+lsJL/Y3ZC/11xOv/b39T/29/U/11xOv9jdkL/pbCS/2V3
        Q/9kd0P/maWC/5qmhP9ld0P/aXtJ/2t9Sv9vgk7pe5BWWgAAAAAAAAAAAAAAAAAAAAB8kVYFb4JO7Gt9
        So9sfktSbYBM/3eLU1AAAAAAAAAAAAAAAAAAAAAAAAAAAHWIUbxsf0z/anxJ/2Z5Rv+FlGv/rLWZ/2N2
        Qv9kd0P/prCS/2N2Qv9dcTv/2d3P/9ndz/9dcTv/Y3ZC/6awkv9kd0P/Y3ZC/6y1mv+FlGr/ZnlG/2p8
        Sf9sf0z/dYhRugAAAAAAAAAAAAAAAAAAAAAAAAAAd4tTUG2ATP9sfktSc4ZQDm+CTvh0iFG+AAAAAAAA
        AAAAAAAAAAAAAAAAAAB7kFZdb4JO3Gp9Sv9oekf/Y3VB/8bNuv9idUD/ZHZC/6Svkf9jdkL/XnE7/9XZ
        zP/V2cz/XnE7/2N2Qv+kr5H/ZHZC/2J1QP/Gzbr/Y3VB/2h6R/9qfUr/b4JO3HuQVlwAAAAAAAAAAAAA
        AAAAAAAAAAAAAHSIUb5vgk74c4ZQDgAAAAB0h1GscINO/3mNVD8AAAAAAAAAAAAAAAAAAAAAAAAAAHWI
        UZRsf0v/aXtJ/2V3RP+6wqr/bX9O/2N2Qf+cqIX/bX5O/11xO//S18f/0tfH/11xO/9tfk7/nKiF/2N2
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHuQVhN1iFGFb4JO7W1/TP9pe0j/XHA4/+To3//t8Or/7O/o/+/x
        7P/v8ez/7O/o/+3w6v/k6N//XHA4/2l7SP9tf0z/b4JO7XWIUYV7kFYTAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHyRVgl3i1NXcYVOqGJ2Puvt8On/9PXy/+/w7P/u8Oz/7vDs/+/w7P/09fL/7vDp/2J2
        PutxhU6od4tTV3yRVgkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABug0cxsbyf8/7//f/19/P/9Pbx//T28f/19/T//v/+/6q1lOhuhEgxAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKazjdr/////////////
        //////////////////+jsYqrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmfD5V/P77///////////////////////c4tD+dItNQwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAcohKJczUv/7////////////////b4dH9n6+DxwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABofUIzb4JQr6y3
        m/artZjwYng7QgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAAPAAAA4AAAAAcAAADAAAAAAwAAANgAAAAbAAAAmAAAABkA
        AACYAAAAGQAAAD/+AH/8AAAAIAAAAAQAAAAgAAAABAAAACAAAAAEAAAAIAAAAAQAAABwAAAADgAAADAA
        AAAMAAAAOAAAABwAAAA4AAAAHAAAADwAAAA8AAAAPgAAAHwAAAAeAAAAeAAAAB8AAAD4AAAAHwAAAPgA
        AACPgAAB8QAAAIeAAAHhAAAAx8AAA+MAAADDwAADwwAAAOHgAAeHAAAA4OAABwcAAADwcAAODwAAAPgY
        ABgfAAAA/AQAID8AAAD+AAAAfwAAAP8AAAD/AAAA/8AAA/8AAAD/8AAP/wAAAP/+AH//AAAA//8A//8A
        AAD//wD//wAAAP//Af//AAAA//+D//8AAAA=
</value>
  </data>
</root>